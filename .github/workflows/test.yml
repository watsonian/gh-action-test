# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: dopplerhq/cli-action@v1
      
      - name: Do something with the CLI
        run: doppler secrets --only-names
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          
      - name: Set env var
        run: |
          echo "HELLO=$(doppler secrets get HELLO --plain)" >> $GITHUB_ENV
          echo "::add-mask::$HELLO"
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          
      - name: Echo env var
        run: echo "HELLO -- $HELLO"

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          node --version
  job1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: dopplerhq/cli-action@v1
      
      - id: step1
        run: |
          TEMPLATE=$(doppler secrets substitute ${GITHUB_WORKSPACE}/file.tmpl)
          echo "TEMPLATE<<EOF" >> $GITHUB_ENV
          echo "$TEMPLATE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo $TEMPLATE
